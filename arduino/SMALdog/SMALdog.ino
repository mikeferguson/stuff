/*
 * Auto-Generated by NUKE!
 *   http://arbotix.googlecode.com
 */

#include <ax12.h>
#include <BioloidController.h>
#include <Commander.h>
#include <SharpIR.h>
#include "nuke.h"

Commander command = Commander();
SharpIR rightIR = SharpIR(GP2D12,0);
#define dist  30

#define PIN_START  2

void setup(){   
    pinMode(0,OUTPUT);
    int i;
    //digitalWrite(PIN_BUT, HIGH);
    // setup IK    
    setupIK();    
    gaitSelect(SHIFT_RIPPLE); //_GEO);
    // setup serial
    Serial.begin(38400);
    Serial.println("Begin...");

    // stand up slowly
    delay(100);
    bioloid.poseSize = 12;
    bioloid.readPose();
    doIK();
    bioloid.interpolateSetup(1000);
    while(bioloid.interpolating > 0){
        bioloid.interpolateStep();
        delay(3);
    }
    
    /*volatile int wait;
    digitalWrite(PIN_START,HIGH);
    wait = digitalRead(PIN_START);
    while(wait){
      // standard delay .. 
      delay(10);
      wait = digitalRead(PIN_START);
      i++;
      if(i > 20){
        digitalWrite(0, HIGH-digitalRead(0));
        i = 0;        
      }
    }*/
    delay(3000);
    
    // Forward about 12 inches
    SetPosition(15,512);
    travelX = 80; //120;
    for(i=0; i<40; i++){
      /*int x = rightIR.getSmoothData();
      if(x < dist){ 
        digitalWrite(0,HIGH);
        if(x < ((dist * 3) / 5))
          travelRotZ = 0.10;    // motor way to the left
        else
          travelRotZ = 0.05;    // motor to the left...    
      }else{
        digitalWrite(0,LOW);
        if(x > ((dist*5)/3))
          travelRotZ = -0.10;
        else 
          travelRotZ = -0.05;       // motor to the right...
      }*/
      doIK();
      bioloid.interpolateSetup(tranTime);
      while(bioloid.interpolating > 0)
        bioloid.interpolateStep();  
      //delay(2000);
    }
    
    gaitSelect(AMBLE);
    
    // Now Turn 90 degrees
    travelX = 0;
    travelRotZ = -0.207;  // 12 degrees
      
    for(i=0;i<30;i++){
      doIK();
      bioloid.interpolateSetup(tranTime);
      while(bioloid.interpolating > 0)
        bioloid.interpolateStep();  
    }
        
    travelX = 0;
    travelRotZ = 0;
    
    /*delay(1500);
    bodyPosY = 20;
    doIK();
    bioloid.interpolateSetup(500);
    while(bioloid.interpolating > 0)
      bioloid.interpolateStep();
      
    delay(1500);
    bodyPosY = -20;
    doIK();
    bioloid.interpolateSetup(500);
    while(bioloid.interpolating > 0)
      bioloid.interpolateStep();
    
    delay(1500);
    bodyPosY = 0;
    bodyRotX = 0.20;
    doIK();
    bioloid.interpolateSetup(500);
    while(bioloid.interpolating > 0)
      bioloid.interpolateStep();
      
    delay(1500);
    bodyRotX = -0.20;
    doIK();
    bioloid.interpolateSetup(500);
    while(bioloid.interpolating > 0)
      bioloid.interpolateStep();
      
    delay(1500);
    bodyRotX = -0.0;
    bodyRotY = 0.30;
    doIK();
    bioloid.interpolateSetup(500);
    while(bioloid.interpolating > 0)
      bioloid.interpolateStep();
    
    
    while(1);*/
    
    //while(digitalRead(PIN_BUT)); 
    //gaitSelect(RIPPLE_GEO);
    //travelX = 75;
    /*travelX = 35;
    for(i=0;i<36;i++){
      if(i > 12) travelX = 100;
      Serial.print("i=");
      Serial.println(i);
      doIK();
      bioloid.interpolateSetup(tranTime);
      while(bioloid.interpolating > 0){
        bioloid.interpolateStep();
        delay(3);
      }
      delay(500);
      while(digitalRead(PIN_BUT));
    }
    travelX = 0;*/
    
    // JUMP;
    /*delay(5000);
    bodyPosX = 65;
    doIK();
    bioloid.interpolateSetup(50);
    while(bioloid.interpolating > 0) bioloid.interpolateStep();
    bodyPosX = 75;
    endpoints[RIGHT_FRONT].x = 50;    
    endpoints[LEFT_FRONT].x = 50;
    bioloid.interpolateSetup(50);
    while(bioloid.interpolating > 0) bioloid.interpolateStep();
    bodyPosX = -25;
    endpoints[RIGHT_FRONT].x = 120;    
    endpoints[LEFT_FRONT].x = 120;
    //endpoints[RIGHT_FRONT].z = 100;    
    //endpoints[LEFT_FRONT].z = 100;
    doIK();
    bioloid.interpolateSetup(100);
    while(bioloid.interpolating > 0) bioloid.interpolateStep();
     
    endpoints[RIGHT_REAR].z = 160;    
    endpoints[LEFT_REAR].z = 160;
    doIK();
    bioloid.interpolateSetup(1000);
    while(bioloid.interpolating > 0) bioloid.interpolateStep();*/
   
}

void loop(){
  // update IK if needed
  if(bioloid.interpolating == 0){
    doIK();
    bioloid.interpolateSetup(tranTime);
  }
  // update joints
  bioloid.interpolateStep();
  // take commands 
  if(command.ReadMsgs() > 0){
    digitalWrite(0,HIGH-digitalRead(0));
    // Gaits
    if((command.buttons&BUT_R3)) // && (currentGait!=AMBLE))
      gaitSelect(AMBLE);  
    if((command.buttons&BUT_L4)) // && (currentGait!=RIPPLE))
      gaitSelect(RIPPLE);  
  
    //bodyPosX = (command.walkV);
    travelX = ((command.walkV));
    if((command.buttons&BUT_LT) > 0)
      travelY = (command.walkH);
    else
      //bodyPosY = command.walkH;
      travelRotZ = -(command.walkH)/250.0;  
    bodyRotY = (((float)command.lookV))/250.0;
    if((command.buttons&BUT_RT) > 0)
       bodyRotX = ((float)command.lookH)/250.0; 
    else
      SetPosition(15,512-(2*command.lookH)); //bodyRotZ = ((float)command.lookH)/250.0;
  }   
}





/*
//unsigned long Htime;
void loop(){
  // update IK if needed
  if(bioloid.interpolating == 0){
    doIK();
    bioloid.interpolateSetup(65); //tranTime);  // was doing 50
  }
  // update joints
  bioloid.interpolateStep();
  // take commands 
  if(command.ReadMsgs() > 0){
    travelX = ((command.walkV));
    if((command.buttons&WALK_TOP) > 0)
      travelY = (command.walkH);
    else
      travelRotZ = -(command.walkH)/250.0;  
    bodyRotY = (((float)command.lookV))/375.0;
    if((command.buttons&LOOK_TOP) > 0)
      //bodyRotX = ((float)command.lookH)/375.0; 
      bodyPosY = command.lookH/3;
    else
      bodyRotZ = ((float)command.lookH)/375.0;
    /*if(millis() > Htime + 1000){
      if((command.buttons&WALK_3) > 0){
        LIFT_HEIGHT++;
        Htime = millis();
      }
      if((command.buttons&LOOK_4) > 0){
        LIFT_HEIGHT--;  
        Htime = millis();
      }
    }
  }   
}*/

